{"version":3,"sources":["app-header.js","app.js","common/directives.js","examples/element-blocking.js","examples/examples.js","examples/focus-input.js","examples/manual-blocking.js","examples/my-demo-table.js","navbar/navbar-controller.js","navbar/navbar-directive.js","app-templates.js","app-footer.js"],"names":[],"mappings":"AAAA;GACA;GACA;GACA;AACA;AACA;;ACLA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;IACA;IACA;EACA;EACA;IACA;IACA;IACA;EACA;AACA,UAAA,qCAAA;;EAEA;IACA;EACA;;EAEA;IACA;EACA;;EAEA;IACA;EACA;;AAEA,CAAA,CAAA,SAAA,4DAAA;;EAEA;;EAEA;;EAEA;;EAEA;IACA;IACA;;IAEA;IACA;IACA;EACA;IACA;IACA;IACA;IACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;;AAEA;;AAEA;;AAEA,CAAA,CAAA,cAAA,cAAA,GAAA,sBAAA;AACA;AACA,CAAA,CAAA;;AC3FA,mCAAA,OAAA;EACA;IACA;IACA;IACA;MACA;QACA;;QAEA;UACA;UACA;QACA;MACA;IACA;EACA;AACA;;;ACdA,oCAAA,yBAAA,GAAA,sBAAA;;EAEA;;IAEA;;IAEA;;IAEA;MACA;IACA;MACA;IACA;EACA;;AAEA,CAAA,CAAA;;;AChBA;EACA;IACA;EACA;EACA;IACA;IACA;EACA;AACA;;AAEA,oCAAA,kBAAA,GAAA,2BAAA;;EAEA;IACA;IACA;MACA;IACA;EACA;;EAEA;IACA;IACA;EACA;;EAEA;;IAEA;IACA;MACA;QACA;MACA;IACA;IACA;EACA;;EAEA;IACA;IACA;EACA;IACA;IACA;EACA;IACA;IACA;EACA;IACA;IACA;EACA;;EAEA;EACA;IACA;EACA;;AAEA,CAAA,CAAA;;ACtDA,oCAAA,2BAAA,GAAA,kCAAA;;EAEA;;EAEA;IACA;;IAEA;MACA;IACA;EACA;;EAEA;;EAEA;IACA;;IAEA;MACA;IACA;EACA;;EAEA;;IAEA;;IAEA;MACA;IACA;;EAEA;AACA,CAAA,CAAA;;AC9BA,oCAAA,wBAAA,GAAA,gEAAA;;EAEA;IACA;;IAEA;MACA;IACA;EACA;;EAEA;IACA;;IAEA;MACA;IACA;EACA;;EAEA;IACA;;IAEA;MACA;IACA;;IAEA;MACA;IACA;;IAEA;MACA;IACA;;IAEA;MACA;IACA;EACA;;EAEA;IACA;;IAEA;MACA;MACA;IACA;;EAEA;;EAEA;;IAEA;MACA;IACA;EACA;;EAEA;;IAEA;;IAEA;MACA;IACA;;IAEA;MACA;IACA;EACA;AACA,CAAA,CAAA;ACpEA,mCAAA,WAAA,GAAA,uBAAA;EACA;IACA;IACA;;MAEA;QACA;QACA;QACA;QACA;UACA;QACA;QACA;UACA;QACA;QACA;UACA;QACA;MACA;;MAEA;QACA;MACA;;MAEA;QACA;UACA;QACA;MACA;IACA;EACA;AACA,CAAA,CAAA;;AAEA,iCAAA,kBAAA,GAAA,gBAAA;;EAEA;IACA;;MAEA;;MAEA;;MAEA;MACA;MACA;;QAEA;;QAEA;UACA;QACA;;QAEA;QACA;;QAEA;MACA;;MAEA;IACA;EACA;;AAEA,CAAA,CAAA;AC9DA,oCAAA,gBAAA,GAAA,oCAAA;;EAEA;;EAEA;;IAEA;;MAEA;MACA;;MAEA;QACA;;QAEA;UACA;UACA;QACA;;QAEA;QACA;MACA;;MAEA;IACA;EACA;;EAEA;;EAEA;IACA;EACA;;EAEA;;EAEA;IACA;EACA;;EAEA;IACA;EACA;;AAEA,CAAA,CAAA;;AC3CA,mCAAA,MAAA,GAAA,cAAA;;EAEA;;EAEA;IACA;IACA;IACA,aAAA,gBAAA;IACA;EACA;AACA,CAAA,CAAA;;ACVA;AACA;AACA;AACA;EACA;EACA;EACA;EACA;AACA;ACRA","file":"app.js","sourcesContent":["/*!\n   angular-block-ui v0.2.0\n   (c) 2015 (null) McNull https://github.com/McNull/angular-block-ui\n   License: MIT\n*/\n(function(angular) {\n","angular.module('myApp', [\n  'ngRoute',\n  'ngSanitize',\n//  'ngResource',\n  'ngAnimate',\n  'blockUI',\n  'markdown',\n  'responseLag',\n  'inform',\n  'inform-exception',\n  'inform-http-exception'\n], null).value('navItems', [\n  {\n    text: 'Home',\n    url: '#!/'\n  },\n  {\n    text: 'Documentation',\n    url: '#!/examples',\n    pattern: '/examples(/.*)?'\n  }\n]).config(function ($routeProvider, examplesRoutes) {\n\n  $routeProvider.when('/', {\n    templateUrl: 'app/main/home.ng.html'\n  });\n\n  angular.forEach(examplesRoutes, function (value, key) {\n    $routeProvider.when(key, value);\n  });\n\n  $routeProvider.otherwise({\n    redirectTo: '/'\n  });\n\n}).config(function (blockUIConfig, responseLagConfig, $locationProvider) {\n\n  // Enable hashbangs\n\n  $locationProvider.hashPrefix('!');\n\n  blockUIConfig.blockBrowserNavigation = true;\n  \n  if(window.location.search.indexOf('delay=false')!=-1 ||\n    window.location.search.indexOf('_escaped_fragment_')!=-1 ||\n    window.navigator.userAgent.indexOf('Prerender')!=-1) {\n\n    responseLagConfig.enabled = false;\n    blockUIConfig.autoBlock = false;\n    blockUIConfig.autoInjectBodyBlock = false;\n  } else {\n    responseLagConfig.excludes.push(/.*\\.md/i);\n    responseLagConfig.enabled = true;\n    responseLagConfig.timeout.min = 750;\n    responseLagConfig.timeout.max = 1500;\n\n//    // Change the displayed message based on the http verbs being used.\n//    blockUIConfig.requestFilter = function(config) {\n//\n//      var message;\n//\n//      switch(config.method) {\n//\n//        case 'GET':\n//          message = 'Getting ...';\n//          break;\n//\n//        case 'POST':\n//          message = 'Posting ...';\n//          break;\n//\n//        case 'DELETE':\n//          message = 'Deleting ...';\n//          break;\n//\n//        case 'PUT':\n//          message = 'Putting ...';\n//          break;\n//      }\n//\n//      return message;\n//\n//    };\n  }\n\n//  blockUIConfig.template = '<pre><code>{{ state | json }}</code></pre>';\n\n//  blockUIConfig.delay = 200;\n\n}).controller('MainController', function($scope, blockUI) {\n//  blockUI.start();\n});\n","angular.module('myApp').directive('confirm', ['$window', function($window) {\n  return {\n    restrict: 'A',\n    priority: 100,\n    link: function(scope, element, attr) {\n      element.bind('click', function(e) {\n        var msg = attr.confirm;\n\n        if(!$window.confirm(msg)) {\n          e.stopImmediatePropagation();\n          e.preventDefault();\n        }\n      });\n    }\n  };\n}]);\n","\nangular.module('myApp').controller('ElementBlockingController', function($scope, blockUI) {\n\n  $scope.toggleBlock = function(name) {\n\n    // Get a reference to the blockUI instance\n  \n    var myBlock = blockUI.instances.get(name);\n\n    if(myBlock.state().blocking) {\n      myBlock.stop();\n    } else {\n      myBlock.start();\n    }\n  };\n\n});\n\n","angular.module('myApp').constant('examplesRoutes', {\n  '/examples': {\n    redirectTo: '/examples/documentation'\n  },\n  '/examples/:example': {\n    templateUrl: 'app/examples/examples.ng.html',\n    controller: 'ExamplesController'\n  }\n});\n\nangular.module('myApp').controller('ExamplesController', function($scope, $routeParams) {\n\n  function urlToName(str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n    return str.replace(/\\W+(.)/g, function(i, c) {\n      return ' ' + c.toUpperCase();\n    });\n  }\n\n  function nameToUrl(str) {\n    str = str.toLowerCase();\n    return str.replace(/\\s+/g, '-');\n  }\n\n  function indexOfExample(name, examples) {\n\n    var i = examples.length;\n    while (i--) {\n      if (examples[i].name === name) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  $scope.examples = [{\n    name: 'Documentation',\n    tmpl: 'app/examples/readme.html'\n  }, {\n    name: 'Manual Blocking Examples',\n    tmpl: 'app/examples/manual-blocking.html'\n  }, {\n    name: 'Element Blocking Examples',\n    tmpl: 'app/examples/element-blocking.html'\n  }, {\n    name: 'Focus Management',\n    tmpl: 'app/examples/focus-input.html'\n  }];\n\n  $scope.examples.active = indexOfExample(urlToName($routeParams.example), $scope.examples);\n  $scope.examples.getUrl = function(example) {\n    return '#!/examples/' + nameToUrl(example.name);\n  };\n\n});\n","angular.module('myApp').controller('FocusInputExampleController', function($scope, blockUI, $timeout) {\n\n  var loginFormBlock = blockUI.instances.get('loginFormBlock');\n\n  $scope.login = function() {\n    loginFormBlock.start('Validating account ...');\n\n    $timeout(function() {\n      loginFormBlock.stop();\n    }, 2000);\n  };\n\n  var searchFormBlock = blockUI.instances.get('searchFormBlock');\n\n  $scope.search = function() {\n    searchFormBlock.start('Searching ...');\n\n    $timeout(function() {\n      searchFormBlock.stop();\n    }, 2000);\n  };  \n\n  $scope.globalBlock = function() {\n\n    blockUI.start('Blocking whole page ...');\n\n    $timeout(function() {\n      blockUI.stop();\n    }, 2000);\n\n  };\n});","\nangular.module('myApp').controller('ManualBlockingController', function($scope, blockUI, $timeout, $http, $window, inform) {\n\n  $scope.startBlock = function() {\n    blockUI.start();\n\n    $timeout(function() {\n      blockUI.stop();\n    }, 2000);\n  };\n\n  $scope.startBlockWithMessage = function() {\n    blockUI.start(\"My custom message\");\n\n    $timeout(function() {\n      blockUI.stop();\n    }, 2000);\n  };\n\n  $scope.startBlockUpdateMessage = function() {\n    blockUI.start();\n\n    $timeout(function() {\n      blockUI.message('Still loading ...');\n    }, 1000);\n\n    $timeout(function() {\n      blockUI.message('Almost there ...');\n    }, 2000);\n\n    $timeout(function() {\n      blockUI.message('Cleaning up ...');\n    }, 3000);\n\n    $timeout(function() {\n      blockUI.stop();\n    }, 4000);\n  };\n\n  $scope.resetOnError = function() {\n    blockUI.start();\n\n    $timeout(function() {\n      throw new Error('Oh dear!');\n      blockUI.stop(); // Stop will never be called\n    }, 1000);\n\n  };\n\n  $scope.withHttpRequest = function() {\n\n    $http.get('index.html').then(function(data) {\n      inform.add('Data received from server', { type: 'success' });\n    });\n  };\n\n  $scope.executeWhenDone = function() {\n\n    blockUI.start();\n\n    blockUI.done(function() {\n      inform.add('BlockUI has finished.');\n    });\n\n    $timeout(function() {\n      blockUI.stop();\n    }, 1000);\n  };\n});","angular.module('myApp').directive('myDemoTable', function(myFakeDataResource) {\n  return {\n    templateUrl: 'app/examples/my-demo-table.ng.html',\n    link: function($scope, $element, $attrs) {\n\n      $scope.table = {\n        items: [],\n        offset: 0,\n        limit: 10,\n        previous: function() {\n          $scope.table.offset = Math.max(0, $scope.table.offset - 10);\n        },\n        next: function() {\n          $scope.table.offset = Math.min(40, $scope.table.offset + 10);\n        },\n        emptyRows: function() {\n          return new Array($scope.table.limit - $scope.table.items.length);\n        }\n      };\n\n      $scope.$watch($attrs.limit, function(v) {\n        $scope.table.limit = v === undefined ? $scope.table.limit : v;\n      });\n\n      $scope.$watchCollection('[ table.offset, table.limit ]', function(value) {\n        myFakeDataResource.query({ limit: $scope.table.limit, offset: $scope.table.offset }).$promise.then(function(data) {\n          $scope.table.items = data;\n        });\n      });\n    }\n  };\n});\n\nangular.module('myApp').factory('myFakeDataResource', function($http, $q) {\n\n  return {\n    query: function(params) {\n\n      var d = $q.defer();\n\n      var ret = [];\n\n      ret.$resolved = false;\n      ret.$promise = d.promise;\n      $http.get('app/examples/data-array.json').then(function(response) {\n        \n        ret.length = 0;\n        \n        if(params.offset + params.limit >= response.data.length) {\n          params.offset = 0;\n        }\n        \n        response.data = response.data.splice(params.offset, params.limit);\n        Array.prototype.push.apply(ret, response.data);\n      \n        d.resolve(ret);\n      });\n\n      return ret;\n    }\n  };\n\n});","angular.module('myApp').controller('NavbarController', function ($scope, $location, navItems) {\n\n  var self = this;\n\n  this.setActiveNavItem = function(url) {\n\n    for(var i = 0; i < navItems.length; i++) {\n\n      var navItem = navItems[i];\n      var regexp = navItem.$_regexp;\n\n      if(!regexp) {\n        var pattern = navItem.pattern;\n\n        if (!pattern) {\n          pattern = navItem.url || '/';\n          pattern = pattern.replace(/^#!/, '')\n        }\n\n        regexp = new RegExp('^' + pattern + '$', 'i');\n        navItem.$_regexp = regexp;\n      }\n\n      navItem.isActive = regexp.test(url);\n    }\n  };\n\n  $scope.navItems = navItems;\n\n  $scope.$watch(function () {\n    return $location.path();\n  }, function(newValue) { self.setActiveNavItem(newValue) });\n\n  $scope.navItems.isCollapsed = true;\n\n  $scope.toggleCollapse = function() {\n    $scope.navItems.isCollapsed = !$scope.navItems.isCollapsed;\n  };\n\n  $scope.collapseNavItems = function() {\n    $scope.navItems.isCollapsed = true;\n  };\n\n});\n","angular.module('myApp').directive('navbar', function ($location) {\n\n  var routePatternAttribute = 'data-route-pattern';\n\n  return {\n    restrict: 'A',\n    templateUrl: 'app/navbar/navbar.ng.html',\n    controller: 'NavbarController',\n    replace: true\n  };\n});\n","// Automatically generated.\n// This file is already embedded in your main javascript output, there's no need to include this file\n// manually in the index.html. This file is only here for your debugging pleasures.\nangular.module('myApp').run(['$templateCache', function($templateCache){\n  $templateCache.put('app/examples/examples.ng.html', '<div class=\\\"container\\\"><h1>Angular BlockUI Documentation &amp; Examples</h1><ul class=\\\"nav nav-tabs spacer\\\"><li ng-repeat=\\\"example in examples\\\" ng-class=\\\"{ active: $index === examples.active }\\\"><a href=\\\"{{ examples.getUrl(example) }}\\\">{{ example.name }}</a></li></ul><div class=\\\"spacer\\\" ng-include=\\\"examples[examples.active].tmpl\\\"></div></div>');\n  $templateCache.put('app/examples/my-demo-table.ng.html', '<div class=\\\"my-demo-table\\\"><table class=\\\"table\\\"><tr><th>Name</th><th>Lastname</th><th>Email</th><th>Country</th></tr><tr ng-repeat=\\\"item in table.items\\\"><td>{{ item.first_name }}</td><td>{{ item.last_name }}</td><td>{{ item.email }}</td><td>{{ item.country }}</td></tr><tr ng-repeat=\\\"e in table.emptyRows() track by $index\\\"><td colspan=\\\"4\\\">&nbsp;</td></tr></table><ul class=\\\"pagination\\\"><li><a href=\\\"\\\" ng-click=\\\"table.previous()\\\">&laquo;</a></li><li ng-repeat=\\\"i in [1,2,3,4,5]\\\" ng-class=\\\"{ active: ($index * 10) === table.offset }\\\"><a href=\\\"\\\" ng-click=\\\"table.offset = $index * 10\\\">{{ i }}</a></li><li><a href=\\\"\\\" ng-click=\\\"table.next()\\\">&raquo;</a></li></ul></div>');\n  $templateCache.put('app/main/home.ng.html', '<div class=\\\"container\\\"><div class=\\\"jumbotron\\\"><h1>Angular BlockUI</h1><p>A simple AngularJS module that allows you to block user interaction on AJAX requests.</p><p><a class=\\\"btn btn-primary btn-lg\\\" href=\\\"#!/examples\\\">Documentation »</a></p></div></div>');\n  $templateCache.put('app/navbar/navbar.ng.html', '<div class=\\\"navbar navbar-default text-select-disable\\\" role=\\\"navigation\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle\\\" ng-click=\\\"toggleCollapse()\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#!/\\\">Angular BlockUI</a></div><div class=\\\"navbar-collapse\\\" ng-class=\\\"{ collapsed: navItems.isCollapsed }\\\"><ul class=\\\"navbar-nav nav\\\"><li ng-repeat=\\\"navItem in navItems\\\" ng-class=\\\"{ active: navItem.isActive }\\\"><a ng-href=\\\"{{ navItem.url }}\\\" ng-click=\\\"collapseNavItems()\\\">{{ navItem.text }}</a></li></ul></div></div></div>');\n}]);","})(angular);"],"sourceRoot":"../src/app"}